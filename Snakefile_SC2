regions = [
    "North America",
    "Europe",
    "Japan Korea",
    "Africa",
    "West Asia",
    "Oceania",
    "South America",
    "South Asia",
    "Southeast Asia",
]

min_date = "2020-02-01"


rule europe:
    input:
        [
            "plots/SC2/Region_Europe.png",
            "plots/SC2/Country_Europe_Spain.png",
            "plots/SC2/Country_Europe_Netherlands.png",
            "plots/SC2/Country_Europe_United-Kingdom.png",
            "plots/SC2/Country_Europe_France.png",
        ],


rule download:
    output:
        metadata="data/{lineage}/metadata.tsv.gz",
    shell:
        """
        aws s3 cp s3://nextstrain-ncov-private/metadata.tsv.gz {output.metadata}
        """


rule estimate_region_frequencies:
    input:
        "data/{lineage}/metadata.tsv.gz",
    output:
        output_csv="results/{lineage}/region-frequencies.csv",
    params:
        min_date=min_date,
    shell:
        """
        python scripts/fit_single_frequencies.py --metadata {input} --geo-categories region --frequency-category Nextstrain_clade \
                --min-date {params.min_date} --days 14 --output-csv {output.output_csv}
        """


rule estimate_region_country_frequencies:
    input:
        "data/{lineage}/metadata.tsv.gz",
    output:
        output_csv="results/{lineage}/region-country-frequencies.csv",
    params:
        min_date=min_date,
    shell:
        """
        python scripts/fit_hierarchical_frequencies.py --metadata {input} \
                --geo-categories region country --frequency-category Nextstrain_clade \
                --min-date {params.min_date} --days 14 --output-csv {output.output_csv}
        """


rule plot_regions:
    input:
        freqs="results/{lineage}/region-frequencies.csv",
    output:
        plot="plots/{lineage}/Region_{region}.png",
    params:
        max_freq=0.1,
    shell:
        """
        python scripts/plot_region.py --frequencies {input.freqs} --region {wildcards.region:q} \
                --max-freq {params.max_freq} --output {output.plot}
        """


rule plot_mutations:
    input:
        freqs="results/{lineage}/mutation_{mutation}-frequencies.csv",
    output:
        plot="plots/{lineage}/mutation_{region}-{mutation}.png",
    params:
        max_freq=0.05,
    shell:
        """
        python scripts/plot_region.py --frequencies {input.freqs} --region {wildcards.region:q} \
                --max-freq {params.max_freq} --output {output.plot}
        """


rule plot_country:
    input:
        freqs="results/{lineage}/region-country-frequencies.csv",
    output:
        plot="plots/{lineage}/Country_{region}_{country}.png",
    params:
        max_freq=0.1,
    shell:
        """
        python scripts/plot_country.py --frequencies {input.freqs} --region {wildcards.region:q} --country {wildcards.country:q} \
                --max-freq {params.max_freq} --output {output.plot}
        """


rule multi_region_plot_clades:
    input:
        freqs="results/{lineage}/region-frequencies.csv",
    output:
        plot="plots/{lineage}/region-clades.png",
    params:
        regions=[
            "Africa",
            "Europe",
            "North_America",
            "South_America",
            "Asia",
            "Oceania",
        ],
        max_freq=0.2,
    shell:
        """
        python3 scripts/plot_multi-region.py --frequencies {input.freqs}  \
                --regions {params.regions}  --max-freq {params.max_freq} \
                --auspice-config data/auspice_config.json \
                --output {output.plot}
        """


rule multi_region_plot_mutation:
    input:
        freqs="results/{lineage}/mutation_{mutation}-frequencies.csv",
    output:
        plot="plots/{lineage}/region_mut-{mutation}.png",
    params:
        regions=[
            "Africa",
            "Europe",
            "North_America",
            "South_America",
            "Asia",
            "Oceania",
        ],
        max_freq=0.2,
    shell:
        """
        python3 scripts/plot_multi-region.py --frequencies {input.freqs} --regions {params.regions}  --max-freq {params.max_freq} --output {output.plot}
        """


#        clades = ['1a.1', '2a.1', '2a.1a', '2a.1b', '2a.3a',  '2a.3a.1','2a.3b', '2b'],


rule clean:
    shell:
        "rm -rf data/ results/ plots/"

rule europe:
    input:
        [
            "plots/sc2/Region_Europe.png",
            "plots/sc2/Country_Europe_Spain.png",
            "plots/sc2/Country_Europe_Netherlands.png",
            "plots/sc2/Country_Europe_United-Kingdom.png",
            "plots/sc2/Country_Europe_France.png",
        ],


rule download:
    output:
        metadata="data/{lineage}/metadata_full.tsv.gz",
    shell:
        """
        aws s3 cp s3://nextstrain-ncov-private/metadata.tsv.gz {output.metadata}
        """


rule trim_metadata:
    input:
        metadata="data/{lineage}/metadata_full.tsv.gz",
    output:
        metadata="data/{lineage}/metadata_raw.tsv",
    shell:
        """
        gzcat -c {input.metadata} \
        | tsv-select -H -f region,country,date,Nextstrain_clade \
        > {output.metadata}
        """


rule add_iso3:
    input:
        metadata="data/{lineage}/metadata_raw.tsv",
        country_to_iso3="profiles/flu/country_to_iso3.tsv",
        iso3_to_region="profiles/flu/iso3_to_region.tsv",
    output:
        metadata="data/{lineage}/metadata.tsv",
    shell:
        """
        tsv-join -H \
            --filter-file {input.country_to_iso3} \
            --key-fields country \
            --append-fields iso3 \
            --write-all="?" \
            {input.metadata} \
        | tsv-join -H \
            --filter-file {input.iso3_to_region} \
            --key-fields iso3 \
            --append-fields continent \
            --write-all="?" \
            > {output.metadata}
        """


rule estimate_region_frequencies:
    input:
        "data/{lineage}/metadata.tsv",
    output:
        output_csv="results/{lineage}/region-frequencies.csv",
    params:
        min_date=config["min_date"],
    shell:
        """
        python scripts/fit_single_frequencies.py \
            --metadata {input} \
            --geo-categories continent \
            --frequency-category Nextstrain_clade \
            --min-date {params.min_date} \
            --days 14 \
            --output-csv {output.output_csv}
        """


rule estimate_region_country_frequencies:
    input:
        "data/{lineage}/metadata.tsv",
    output:
        output_csv="results/{lineage}/region-country-frequencies.csv",
    params:
        min_date=config["min_date"],
    shell:
        """
        python scripts/fit_hierarchical_frequencies.py \
            --metadata {input} \
            --geo-categories continent iso3 \
            --frequency-category Nextstrain_clade \
            --min-date {params.min_date} \
            --days 14 \
            --output-csv {output.output_csv}
        """


rule population_weighted_region_frequencies:
    input:
        "results/{lineage}/region-country-frequencies.csv",
    output:
        output_csv="results/{lineage}/weighted-region-frequencies.csv",
    shell:
        """
        python scripts/pop_weighted_aggregates.py \
            --fit-results {input} \
            --population defaults/iso3_to_pop.tsv \
            --region-map profiles/flu/iso3_to_region.tsv \
            --output-csv {output.output_csv}
        """


rule plot_regions:
    input:
        freqs="results/{lineage}/weighted-region-frequencies.csv",
    output:
        plot="plots/{lineage}/Region_{region}.png",
    params:
        max_freq=0.1,
    shell:
        """
        python scripts/plot_region.py \
            --frequencies {input.freqs} \
            --region {wildcards.region:q} \
            --max-freq {params.max_freq} \
            --output {output.plot}
        """


rule plot_mutations:
    input:
        freqs="results/{lineage}/mutation_{mutation}-frequencies.csv",
    output:
        plot="plots/{lineage}/mutation_{region}-{mutation}.png",
    params:
        max_freq=0.05,
    shell:
        """
        python scripts/plot_region.py \
            --frequencies {input.freqs} \
            --region {wildcards.region:q} \
            --max-freq {params.max_freq} \
            --output {output.plot}
        """


rule plot_country:
    input:
        freqs="results/{lineage}/region-country-frequencies.csv",
    output:
        plot="plots/{lineage}/Country_{region}_{country}.png",
    params:
        max_freq=0.1,
    shell:
        """
        python scripts/plot_country.py \
            --frequencies {input.freqs} \
            --region {wildcards.region:q} \
            --country {wildcards.country:q} \
            --max-freq {params.max_freq} \
            --output {output.plot}
        """


rule multi_region_plot_clades:
    input:
        freqs="results/{lineage}/region-frequencies.csv",
    output:
        plot="plots/{lineage}/region-clades.png",
    params:
        regions=[
            "Africa",
            "Europe",
            "North_America",
            "South_America",
            "Asia",
            "Oceania",
        ],
        max_freq=0.2,
    shell:
        """
        python scripts/plot_multi-region.py \
            --frequencies {input.freqs}  \
            --regions {params.regions}  \
            --max-freq {params.max_freq} \
            --auspice-config data/auspice_config.json \
            --output {output.plot}
        """


rule multi_region_plot_mutation:
    input:
        freqs="results/{lineage}/mutation_{mutation}-frequencies.csv",
    output:
        plot="plots/{lineage}/region_mut-{mutation}.png",
    params:
        regions=[
            "Africa",
            "Europe",
            "North_America",
            "South_America",
            "Asia",
            "Oceania",
        ],
        max_freq=0.2,
    shell:
        """
        python scripts/plot_multi-region.py \
            --frequencies {input.freqs} \
            --regions {params.regions}  \
            --max-freq {params.max_freq} \
            --output {output.plot}
        """


rule clean:
    shell:
        "rm -rf data/ results/ plots/"
